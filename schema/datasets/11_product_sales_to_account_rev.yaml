default: &defaults
  targetCube: "testbenchMappingProductToAccount"
  df_from_mdx: >
    SELECT
      {[testbenchMeasureMappingProductToAccount].[testbenchMeasureMappingProductToAccount].[Assign Flag]}
      ON COLUMNS,
      GENERATE({[testbenchMeasureSales].[testbenchMeasureSales].[Revenue],
                [testbenchMeasureSales].[testbenchMeasureSales].[Discount],
                [testbenchMeasureSales].[testbenchMeasureSales].[Cost of Sold Goods],
                [testbenchMeasureSales].[testbenchMeasureSales].[Allocated Cost],
                [testbenchMeasureSales].[testbenchMeasureSales].[Transportation and Packaging Cost]},
        GENERATE(
          {Filter({TM1FILTERBYLEVEL({TM1SUBSETALL([testbenchProduct].[testbenchProduct])}, 0)}, [testbenchSales].([testbenchVersion].[Actual],[testbenchPeriod].[2024],[testbenchCustomer].[All Customer],
            [testbenchKeyAccountManager].[All Key Account Manager],[testbenchMeasureSales].CurrentMember) <>0)},
          (
            { [testbenchVersion].[testbenchVersion].[Actual] } *
            { [testbenchProduct].[testbenchProduct].CurrentMember } *
            { [testbenchMeasureSales].[testbenchMeasureSales].CurrentMember} *
            {Head(
              {Filter(
                {TM1FILTERBYPATTERN({[testbenchAccount].[testbenchAccount].Members}, 
                    "*PnL*",
                    "StatementType")}, 
              [testbenchAccount].[testbenchAccount].CurrentMember.Properties('Type') = [testbenchMeasureSales].CurrentMember.Name)
              }
            ,1)
            }
          )
        )
      )
      ON ROWS
    FROM [testbenchMappingProductToAccount]
  data:
    callable: utility.dataframe_find_and_replace
    params:
      mapping:
        Value:
          0: 1
bedrock_test_10000:
  <<: *defaults
bedrock_test_50000:
  <<: *defaults
bedrock_test_100000:
  <<: *defaults
bedrock_test_250000:
  <<: *defaults
bedrock_test_500000:
  <<: *defaults
bedrock_test_1000000:
  <<: *defaults
bedrock_test_5000000:
  <<: *defaults
bedrock_test_10000000:
  <<: *defaults