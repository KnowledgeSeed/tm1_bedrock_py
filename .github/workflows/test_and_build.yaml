name: Test and Build Pipeline

on:
  #push:
  #  branches:
  #    - main
  #    - feature/*
  workflow_dispatch:
    branches:
      - feature/pipeline

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DUSERNAME }}
          password: ${{ secrets.DPASSWORD }}

      - name: Start services with Docker Compose
        run: |
          docker-compose -f docker-compose.yaml up -d
        working-directory: ./tests_integration_airflow

      - name: Inject secrets into config.ini
        run: |
          sed -i "s/address=.*/address=${{ secrets.ADDRESS }}/" example/config_example.ini
          sed -i "s/port=.*/port=${{ secrets.PORT }}/" example/config_example.ini
          sed -i "s/user=.*/user=${{ secrets.USERNAME }}/" example/config_example.ini
          sed -i "s/ssl=.*/user=${{ secrets.SSL }}/" example/config_example.ini

      - name: Run tests
        run: |
          python example/check_connectivity.py

      - name: Stop and remove containers
        if: always()
        run: |
          docker-compose -f docker-compose.yaml down
        working-directory: ./tests_integration_airflow

  #build:
  #  name: Build Package
  #  runs-on: ubuntu-latest
  #  needs: test # Only runs if tests pass

  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4

  #    - name: Build package
  #      run: |
  #        python setup.py sdist bdist_wheel
