skipcheck;

# verzo szabÃ¡lyok
[]= N:
IF(ELISPAR('Version','Report',!Version) = 1,
STET,Continue);

#['Subscription Movement Assignment Measure':'source_flag_mult','Subscription Plan Movement':'Subscription Plan Movement':'New increase'] = N: 1;

['Subscription Movement Assignment Measure':'source_flag_mult'] = N:
max(0, sign(DB('Weight and Limit', !Version, !Period,  !Source Product, 'Switch off weight', 'Value')))
*DB('Subscription Movement Assignment', !Source Product, !Target Product, !Subscription Plan Movement, 'Stored');

['Subscription Movement Assignment Measure':'target_flag_mult'] = N:
max(0, sign(DB('Weight and Limit', !Version, !Period,  !Target Product, 'Switch on weight', 'Value')))
*DB('Subscription Movement Assignment', !Source Product, !Target Product, !Subscription Plan Movement, 'Stored');


['Subscription Movement Assignment Measure':'source_target_flag_mult'] = N: 
['Subscription Movement Assignment Measure':'source_flag_mult'] * ['Subscription Movement Assignment Measure':'target_flag_mult'];

#Rule driven flag calcualte for increase movement from the Subscription Movement Assignment if the source product has switch off and taarget product has switch on weight
['Subscription Movement Assignment Measure':'Rule driven', 'Subscription Plan Movement':{'Upward migration increase', 'Downward migration increase', 'Retainer increase'}] = N:
max(0, sign(DB('Weight and Limit', !Version, !Period,  !Target Product, 'Switch on weight', 'Value')))
* max(0, sign(DB('Weight and Limit', !Version, !Period,  !Source Product, 'Switch off weight', 'Value')))
*DB('Subscription Movement Assignment', !Source Product, !Target Product, !Subscription Plan Movement, 'Stored');

#Rule driven flag calcualte for decrease movement from the Subscription Movement Assignment (switching to opposite side movement for check becasue assignment cube filled only for increases) 
#if the target product has switch off and source product has switch on weight
['Subscription Movement Assignment Measure':'Rule driven', 'Subscription Plan Movement':{'Upward migration decrease', 'Downward migration decrease', 'Retainer decrease'}] = N:
max(0, sign(DB('Weight and Limit', !Version, !Period,  !Source Product, 'Switch on weight', 'Value')))
* max(0, sign(DB('Weight and Limit', !Version, !Period,  !Target Product, 'Switch off weight', 'Value')))
*DB('Subscription Movement Assignment',  !Target Product, !Source Product, DB('}ElementAttributes_Subscription Plan Movement', !Subscription Plan Movement, 'Opposite'), 'Stored');

#Stet the residual
['Subscription Movement Assignment Measure':'Rule driven'] = N: stet;

#For increase movement the target get switched on by the sources switch off ratio, so we need those switch off but only if the target product has switch on
['Subscription Movement Assignment Measure':'Switch Off Weight', 'Subscription Plan Movement':{'Upward migration increase', 'Downward migration increase', 'Retainer increase'}] = N:
DB('Weight and Limit', !Version, !Period,  !Source Product, 'Switch off weight', 'Value')
* max(0, sign(DB('Weight and Limit', !Version, !Period,  !Target Product, 'Switch on weight', 'Value')))
*['Stored'];

#For increase movement the source get switched off by the target switch on rate but only if there are switch off rate on source
['Subscription Movement Assignment Measure':'Switch On Weight', 'Subscription Plan Movement':{'Upward migration increase', 'Downward migration increase', 'Retainer increase'}] = N:
DB('Weight and Limit', !Version, !Period,  !Target Product, 'Switch on weight', 'Value')
* max(0, sign(DB('Weight and Limit', !Version, !Period,  !Source Product, 'Switch off weight', 'Value')))
*['Stored'];

#For decrease movement the target get switched off by the sources switch on ratio, so we need those switch on but only if the target product has switch off
['Subscription Movement Assignment Measure':'Switch Off Weight', 'Subscription Plan Movement':{'Upward migration decrease', 'Downward migration decrease', 'Retainer decrease'}] = N:
DB('Weight and Limit', !Version, !Period,  !Target Product, 'Switch off weight', 'Value')
* max(0, sign(DB('Weight and Limit', !Version, !Period,  !Source Product, 'Switch on weight', 'Value')))
*['Stored'];

#For decrease movement the source get switched on by the target switch off rate but only if there are switch on rate on source
['Subscription Movement Assignment Measure':'Switch On Weight', 'Subscription Plan Movement':{'Upward migration decrease', 'Downward migration decrease', 'Retainer decrease'}] = N:
DB('Weight and Limit', !Version, !Period,  !Source Product, 'Switch on weight', 'Value')
* max(0, sign(DB('Weight and Limit', !Version, !Period,  !Target Product, 'Switch off weight', 'Value')))
*['Stored'];

feeders;

['Subscription Movement Assignment Measure': {'source_flag_mult','target_flag_mult'}, 'Version':'Forecast'] => ['Subscription Movement Assignment Measure':'source_target_flag_mult'];

['Version':'Forecast','Subscription Plan Movement':'Subscription Plan Movement':{'Upward migration increase', 'Downward migration increase', 'Retainer increase'},'Subscription Movement Assignment Measure':'Stored'] =>
['Subscription Movement Assignment Measure':'Switch Off Weight'];

['Version':'Forecast','Subscription Plan Movement':'Subscription Plan Movement':{'Upward migration decrease', 'Downward migration decrease', 'Retainer decrease'},'Subscription Movement Assignment Measure':'Stored'] =>
['Subscription Movement Assignment Measure':'Switch On Weight'];


['Version':'Forecast','Subscription Plan Movement':'Subscription Plan Movement':'Migration increase','Subscription Movement Assignment Measure':'Switch Off Weight'] =>
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', !Source Product, !Target Product, !Subscription Plan Movement, 'TD UI Input');

['Version':'Forecast','Subscription Plan Movement':'Subscription Plan Movement':'Migration decrese','Subscription Movement Assignment Measure':'Switch On Weight'] =>
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', !Source Product, !Target Product, !Subscription Plan Movement, 'TD UI Input');









