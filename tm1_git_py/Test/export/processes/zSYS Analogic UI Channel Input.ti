#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# Módos Dávid
# 2024 03 19
# vagy flat vagy EFI lesz
# channel time depemdent kocka átírása 
# értékek nullázása az adott időszakra
# érték beírása

sAllNTimeSubset = 'Actual Period N level';
sPeriodDim = 'Period';
sPeriodStartMonth = pPeriodStart | '01';
sPeriodEndMonth = pPeriodEnd | '12';
nStartIndex = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sPeriodStartMonth);
nEndIndex = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sPeriodEndMonth);

IF( pNewType @= 'Flat');
# element attri kocka átírása EFI, Payment Type, Currency, FLAT
# értékek nullázása
i = nStartIndex;
While(i <= nEndIndex);
    sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
    CellPutN(0, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'EFI');
    CellPutN(0, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'EFI Cost');
    CellPutS('Flat', 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'Payment Type');
    CellPutS(pCurrency, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'Currency');
    CellPutN(1, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'FLAT');
    
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'HUF', 'Flat', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'EUR', 'Flat', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'USD', 'Flat', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'USD', 'CPS', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'EUR', 'CPS', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'HUF', 'CPS', 'Value');
    
    i = i+1;
    END;
    
i = nStartIndex;
While(i <= nEndIndex);
    sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
    pNewValue = StringToNumber(pValue)\12;
    CellPutN(pNewValue, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', pCurrency, 'Flat', 'Value');
    i = i+1;
END;
    
ENDIF;



IF( pNewType @= 'Efi');
# element attri kocka átírása EFI, Payment Type, Currency, FLAT
# értékek nullázása
i = nStartIndex;
While(i <= nEndIndex);
    pNewValue = StringToNumber(pValue);
    sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
    CellPutN(1, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'EFI');
    CellPutN(pNewValue, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'EFI Cost');
    CellPutS('EFI Cost', 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'Payment Type');
    CellPutS(pCurrency, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'Currency');
    CellPutN(0, 'Channel Time Dependent Attributes', pVersion, sInputPeriod, pChannel, 'FLAT');
    
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'HUF', 'Flat', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'EUR', 'Flat', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'USD', 'Flat', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'USD', 'CPS', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'EUR', 'CPS', 'Value');
    CellPutN(0, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', 'HUF', 'CPS', 'Value');
    
    i = i+1;
    END;
    
i = nStartIndex;
While(i <= nEndIndex);
    sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
    CellPutN(pNewValue, 'Channel Cost', pVersion, sInputPeriod, pChannel, 'Nem tartozik termekhez', pCurrency, 'CPS', 'Value');
    i = i+1;
END;
    
ENDIF;



#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

sToday = Today(1);
CellPutS(sToday, '}ElementAttributes_Version', pVersion, 'Last Updated');
CellPutS(pUser, '}ElementAttributes_Version', pVersion, 'Last Updated By');

#endregion
