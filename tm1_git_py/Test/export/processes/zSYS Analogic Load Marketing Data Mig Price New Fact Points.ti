#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****


# Mody 08 25
# A migrációért járó tényadatokat adja meg.


# 1 metadataban töröljuk a hónapot
# 2 cellIncrese összegezzük az adott hónapra

# Ehhez az adott hónapra kell összegezni
# A lefelé migráció + megtartó + nem változott + termék mig tranzakciók
# Adott termékért kapott tranzakcióért járó ajándék pontokat


sPeriodDim = 'Period';

sActualMon = CellGetS('zSYS Maintenance Parameter', 'ActualMonth', 'S Type');

IF( pAllPeriod @= '1');
  sAllNTimeSubset = 'All N Level Element';
  nStartPeriod = SubsetGetElementName(sPeriodDim, 'Actual Period', 2);
  nStartPeriodIndex = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, nStartPeriod);
  nEndPeriodIndex = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sActualMon);
  
  i = nStartPeriodIndex;
  While(i < nEndPeriodIndex);
    sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
    CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Migracioert jaro pontok', 'Value');
    CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Arkategoriaert jaro pontok', 'Value');
    CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Uj szerzodesekert jaro pontok', 'Value');
    i = i+1;
  END;
  
ENDIF;



IF( pLastYear @= '1');
 nStartPeriodIndex = 1;
 sAllNTimeSubset = 'Last_Actual_Year';
 nEndPeriodIndex = SubsetGetSize(sPeriodDim, sAllNTimeSubset);
 i = nStartPeriodIndex;
  While(i <= nEndPeriodIndex);
    sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
    CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Migracioert jaro pontok', 'Value');
    CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Arkategoriaert jaro pontok', 'Value');
    CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Uj szerzodesekert jaro pontok', 'Value');
    i = i+1;
 END;
 
 
 
ENDIF;




#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****





#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****


sPeriod = DELET (vDatum, 8,12); 
sPeriod = DELET (sPeriod, 5, 1);


IF( SubsetElementExists(sPeriodDim, sAllNTimeSubset, sPeriod) = 0 );
  itemskip;
ENDIF;

IF( sPeriod @=  sActualMon);
  itemskip;
ENDIF;

##### Migracioert jaro pontok
IF( vTranzakcioTipusa @= 'Termék migráció');
  nMigertjaroPont = StringToNumber(vAdottTermekertKapottTranzakcioertJaroAjandekPont);
  CellIncrementN(nMigertjaroPont, 'Marketing Cost', pVersion, sPeriod, 'Migracioert jaro pontok', 'Value');
ENDIF;
IF( vTranzakcioTipusa @= 'Nem változtat');
  nMigertjaroPont = StringToNumber(vAdottTermekertKapottTranzakcioertJaroAjandekPont);
  CellIncrementN(nMigertjaroPont, 'Marketing Cost', pVersion, sPeriod, 'Migracioert jaro pontok', 'Value');
ENDIF;
IF( vTranzakcioTipusa @= 'Megtartás');
  nMigertjaroPont = StringToNumber(vAdottTermekertKapottTranzakcioertJaroAjandekPont);
  CellIncrementN(nMigertjaroPont, 'Marketing Cost', pVersion, sPeriod, 'Migracioert jaro pontok', 'Value');
ENDIF;
IF( vTranzakcioTipusa @= 'Lefele migráció');
  nMigertjaroPont = StringToNumber(vAdottTermekertKapottTranzakcioertJaroAjandekPont);
  CellIncrementN(nMigertjaroPont, 'Marketing Cost', pVersion, sPeriod, 'Migracioert jaro pontok', 'Value');
ENDIF;


## Arkategoriaert jaro pontok
nArkategoriaertPont = StringToNumber(vAdottTermekertArkategoriaertKapottAjandekPont);
CellIncrementN(nArkategoriaertPont, 'Marketing Cost', pVersion, sPeriod, 'Arkategoriaert jaro pontok', 'Value');


# Uj szerzodesekert jaro pontok
IF( vTranzakcioTipusa @= 'Új szerződés');
  nMigertjaroPont = StringToNumber(vAdottTermekertKapottTranzakcioertJaroAjandekPont);
  CellIncrementN(nMigertjaroPont, 'Marketing Cost', pVersion, sPeriod, 'Uj szerzodesekert jaro pontok', 'Value');
ENDIF;
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
