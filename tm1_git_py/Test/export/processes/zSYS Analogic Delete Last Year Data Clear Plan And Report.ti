#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# u.d. - 20241119 - topdown kocka clear hozzáadva mindkét üzemmódhoz


sDimName = 'Period';
sCurrentMonth = CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type');
sAllNSubset = 'All N';
nCurrentMonthIndex =  SubsetElementGetIndex(sDimName, sAllNSubset, sCurrentMonth, 1);
nFirtMonthIndex = nCurrentMonthIndex - 13;
nLastMonthIndex = nCurrentMonthIndex - 1;
i = nFirtMonthIndex;

IF( pLastYear = 1);
  While(i <= nLastMonthIndex);
    sPeriod = SubsetGetElementName(sDimName, sAllNSubset, i);
    
    ###### Subsription Plan Cube clear
    sCube = 'Subscription Plan';
    #sFilter =  'State¦CA+FL';
    sFilter = 'Period¦'|sPeriod|' &
    Version¦ '|pVersion|''
    ;
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
  	
  	###### Subsription Topdown Cube clear
    sCube = 'Subscription Topdown';
    sFilter = 'Period¦'|sPeriod|' &
    Version¦ '|pVersion|''
    ;
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
  	
  	
    
    ###### Subsription Report Cube clear
    sCube = 'Subscription Report';
    #sFilter = "State¦CA+FL&Time¦2014"
    sFilter = 'Period¦'|sPeriod|'&
    Subscription Report Measure¦Value &
    Version¦'|pVersion|''
    ;
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
    
    
    i = i+1;
  END;
ENDIF;

IF( pAllPeriod = 1 % pLastYear = 1);
    
    ###### Subsription Plan Cube clear
    sCube = 'Subscription Plan';
    #sFilter =  'State¦CA+FL';
    sFilter = 
    'Version¦ '|pVersion|''
    ;
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
  	
  	###### Subsription Topdown Cube clear
    sCube = 'Subscription Topdown';
    #sFilter =  'State¦CA+FL';
    sFilter = 
    'Version¦ '|pVersion|''
    ;
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
  	
  	
    
    ###### Subsription Report Cube clear
    sCube = 'Subscription Report';
    #sFilter = "State¦CA+FL&Time¦2014"
    sFilter = 
    'Subscription Report Measure¦Value &
    Version¦'|pVersion|''
    ;
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
    
    
ENDIF;







#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
