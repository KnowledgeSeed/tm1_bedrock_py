#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****



sDimName = 'Period';
sCurrentMonth = CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type');
sAllNSubset = 'All N';
nCurrentMonthIndex =  SubsetElementGetIndex(sDimName, sAllNSubset, sCurrentMonth, 1);
nFirtMonthIndex = nCurrentMonthIndex - 13;
nLastMonthIndex = nCurrentMonthIndex - 1;
i = nFirtMonthIndex;

IF( pLastYear = 1);
  While(i <= nLastMonthIndex);
    sPeriod = SubsetGetElementName(sDimName, sAllNSubset, i);
    
    #sFilter =  'State¦CA+FL';
    sFilter = 'Period¦'|sPeriod|' &
    Version¦ '|pVersion|''
    ;
    
    ###### Channel Provider Assignment Cube clear
    sCube = 'Channel Provider Assignment';
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
  	
  	
  	###### Channel Csoportos Flat Assignment Cube clear
    sCube = 'Channel Csoportos Flat Assignment';
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
  	
  	
  	###### Channel Cost Cube clear
    sCube = 'Channel Cost';
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);

    i = i+1;
  END;
ENDIF;


IF( pAllPeriod = 1);
    #sFilter =  'State¦CA+FL';
    sFilter = 
    'Version¦ '|pVersion|''
    ;
    
    ###### Channel Provider Assignment Cube clear
    sCube = 'Channel Provider Assignment';
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);
  	
    
    ###### Channel Csoportos Flat Assignment Cube clear
    sCube = 'Channel Csoportos Flat Assignment';
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);   
    	
    ###### Channel Cost Cube clear
    sCube = 'Channel Cost';
    
    ExecuteProcess( '}bedrock.cube.data.clear', 'pLogOutput', 0,
      'pStrictErrorHandling', 0,
    	'pCube', sCube,
    	'pView', '',
    	'pFilter', sFilter,
    	'pFilterParallel', '',
    	'pParallelThreads', 0,
    	'pDimDelim', '&',
    	'pEleStartDelim', '¦', 'pEleDelim', '+',
    	'pCubeLogging', 0, 'pTemp', 1, 'pSandbox', '', 'pSubN', 0
  	);    
  	
ENDIF;







#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
