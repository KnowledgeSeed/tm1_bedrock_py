#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

#Botond 09.04

sDimensionName_Period = 'Period';
sDimensionName_Version = 'Version';

#sFileName = '2024_09_11_17_16_11_fees_Base_admin_Jogdij.csv';
#pFileName = sFileName;


sColumnDelimiter = ',';
sDecimalSeparator = '.';
sThousandSeparator = ' ';
sQuoteChar = '"';
sCharacterSet = 'TM1CS_UTF8';

# megadja hol van az első adat
nHeaderRow = 0;
nFirstDataCol= 1;
nLastDataCol= 8;
pVersion = pVersion;
nHeaderRowIndex = 1;
i = 1;

sActualPeriod = CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type');

# define and set CSV as data source
pFileLocation = CellGetS('zSYS Maintenance Parameter', 'Import Data Directory Path', 'S Type');
sFile = pFileLocation | pFileName;

DataSourceType = 'CHARACTERDELIMITED';
DataSourceNameForServer = sFile;
DataSourceNameForClient = sFile;
DatasourceASCIIHeaderRecords = nHeaderRow;
DatasourceASCIIQuoteCharacter = sQuoteChar;
DataSourceASCIIDelimiter = sColumnDelimiter;
SetInputCharacterSet ( sCharacterSet );


nSubsetSize = SubsetGetSize('Period', 'Actual Period N level');



#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
IF(i = 1 % i = 2 %  i = 3 % i = 4);
  i = i + 1;
  itemskip;
ENDIF;

  sCol1  =  Expand('%v'| NumberToString(nFirstDataCol + 0) |'%');
  sCol2  =  Expand('%v'| NumberToString(nFirstDataCol + 1) |'%');
  sCol3  =  Expand('%v'| NumberToString(nFirstDataCol + 2) |'%');
  sCol4  =  Expand('%v'| NumberToString(nFirstDataCol + 3) |'%');
  sCol5  =  Expand('%v'| NumberToString(nFirstDataCol + 4) |'%');
  sCol6  =  Expand('%v'| NumberToString(nFirstDataCol + 5) |'%');
  sCol7  =  Expand('%v'| NumberToString(nFirstDataCol + 6) |'%');
  sCol8  =  Expand('%v'| NumberToString(nFirstDataCol + 7) |'%');

nColIndex = 1;
nPeriodIndex = 13;

WHILE( nColIndex <= nlastdatacol );
  
    IF( nColindex = 1);
      sChannel = Expand('%v'| NumberToString(nColIndex) |'%');
    ENDIF;
    
    IF ( nColindex >= 3);
    sExcelPeriodSubset = 'Actual Period N level';
    sInputPeriod = HierarchySubsetGetElementName('Period', 'Period', sExcelPeriodSubset, nPeriodIndex);
    nInputYear = stringToNumber(DELET(sInputPeriod,5,2));
    sInputYear = numberToString(nInputYear);
    sInputPeriod = sInputYear;
    sCurrentValue = Expand('%v'| NumberToString(nColIndex) |'%');
    
    # csak ha benne van az input PEriod-ban
    sPeriodSubsetName = 'Planning Period';
    sPeriodPass = sInputPeriod | '_Planning';
      IF ( SubsetElementExists('Period', sPeriodSubsetName, sPeriodPass) = 1); 
        
          ExecuteProcess('zSYS Analogic UI Channel Jogdij Input',
           'pChannel', sChannel,
           'pPeriod', sInputPeriod,
           'pValue', sCurrentValue,
           'pVersion', pVersion
          );
          
      ENDIF;
    
    nPeriodIndex = nPeriodIndex + 12; 
    
    ENDIF;
    nColIndex = nColIndex + 1;
  
# while  
END;

#Ha végigment a process a subset összes elemén akkor allítsa le
IF(nPeriodIndex > nSubsetSize);
  nPeriodIndex = 13;
ENDIF;

i = i+1;


#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
sToday = Today(1);
CellPutS(sToday, '}ElementAttributes_Version', pVersion, 'Last Updated');
CellPutS(pUser, '}ElementAttributes_Version', pVersion, 'Last Updated By');
#endregion
