#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# Módos Dávid 2024 04 29

# adatokat nullázni kell utána increase


# Csak az egy év hűségidős termékeknél számolódik
# Csal az ügyfélszolgálat számolódik itt
# 4 fajta van.
#- új
#- fel mig kicsi
#- fel mig nagy
#- megtartó


sAllNTimeSubset = 'All N Level Element';
#sAllNTimeSubset = 'Last_Actual_Year';
sPeriodDim = 'Period';
nStartPeriod = 1;
nMaxPeriodLen = SubsetGetSize(sPeriodDim, sAllNTimeSubset);


  
sAllProductSubset = 'Total Products All N';
sSourceProductDim = 'Source Product';
sProductDim = 'Product';
nMaxProductLen = SubsetGetSize(sProductDim, sAllProductSubset);

sCustomerService = 'Customer Service';
sCallCenter = 'Call center';
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****





i = nStartPeriod;
While(i <= nMaxPeriodLen);
  sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'New', 'Transaction Number', 'Value');
  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Upward Migration Small', 'Transaction Number', 'Value');
  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Upward Migration Big', 'Transaction Number', 'Value');
  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Retainer', 'Transaction Number', 'Value');

  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'New', 'Transaction Number', 'Value');
  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Upward Migration Small', 'Transaction Number', 'Value');
  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Upward Migration Big', 'Transaction Number', 'Value');
  CellPutN(0, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Retainer', 'Transaction Number', 'Value');
  i = i+1;
END;











#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

## New ###
i = nStartPeriod;
While(i <= nMaxPeriodLen);
  sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCustomerService, 'New', vProduct, 'New increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'New', 'Transaction Number', 'Value');
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCallCenter, 'New', vProduct, 'New increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'New', 'Transaction Number', 'Value'); 
  i = i+1;
END;
## New END ###

## Megtartó ###
## Hűséghosszíbítás, lefelé mig , megtartó ###

i = nStartPeriod;
While(i <= nMaxPeriodLen);
  sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
  
  # hűséghosszabítás
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCustomerService, 'Total Products', vProduct, 'Loyalty extension increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Retainer', 'Transaction Number', 'Value'); 
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCallCenter, 'Total Products', vProduct, 'Loyalty extension increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Retainer', 'Transaction Number', 'Value'); 
  
  # lefelé mig
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCustomerService, 'Total Products', vProduct, 'Downward migration increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Retainer', 'Transaction Number', 'Value');
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCallCenter, 'Total Products', vProduct, 'Downward migration increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Retainer', 'Transaction Number', 'Value'); 
  
  # megtartó
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCustomerService, 'Total Products', vProduct, 'Retainer increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Retainer', 'Transaction Number', 'Value');
  nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCallCenter, 'Total Products', vProduct, 'Retainer increase', 'Final Value');
  CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Retainer', 'Transaction Number', 'Value'); 
  
  i = i+1;
END;
## Hűséghosszíbítás END ###


## Fel mig nagy és kicsi###

i = nStartPeriod;

While(i <= nMaxPeriodLen);
  sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
  
    nProductI = 1;
    While(nProductI <= nMaxProductLen);
    sInputProduct = SubsetGetElementName(sProductDim, sAllProductSubset, nProductI);
    nSourceProdMigPoint = CellGetN('}ElementAttributes_Product', sInputProduct, 'Migration Point');
    nTargetProdMigPoint = CellGetN('}ElementAttributes_Product', vProduct, 'Migration Point');
    
      # felfelé migráció kicsi
      IF( nTargetProdMigPoint - nSourceProdMigPoint = 1);
        nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCustomerService, sInputProduct, vProduct, 'Upward migration increase', 'Final Value');
        CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Upward Migration Small', 'Transaction Number', 'Value');
        nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCallCenter, sInputProduct, vProduct, 'Upward migration increase', 'Final Value');
        CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Upward Migration Small', 'Transaction Number', 'Value');
      ENDIF;
      
      # fel mig nagy
      IF( nTargetProdMigPoint - nSourceProdMigPoint > 1  );
        nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCustomerService, sInputProduct, vProduct, 'Upward migration increase', 'Final Value');
        CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCustomerService, vProduct, 'Upward Migration Big', 'Transaction Number', 'Value');
        nCallCenterNew = CellGetN('Subscription Plan', pVersion, sInputPeriod, '1', sCallCenter, sInputProduct, vProduct, 'Upward migration increase', 'Final Value');
        CellIncrementN(nCallCenterNew, 'Commission', pVersion, sInputPeriod, '1', sCallCenter, vProduct, 'Upward Migration Big', 'Transaction Number', 'Value'); 
      ENDIF;
    nProductI = nProductI + 1;  
    END;  

  
  i = i+1;
END;

## Fel mig nagy END ###











#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
