#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****
#Miki 2023.06.26.

sCube = 'Weight and Limit';

sDimName = 'Period';
sHierName = 'Period';
sSubsetName = 'Actual Period N level'; 
#Botond 05.29 Input periodrol javítva

sActualMonth = CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type');
sActualYear= Subst(CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type'), 1, 4);

sENDMonthI = HierarchySubsetGetSize(sDimName, sHierName, sSubsetName);

nMinValue = CellGetN(sCube, pVersion, pPeriod, pProduct, 'Minimum', 'Value');
nMaxValue = CellGetN(sCube, pVersion, pPeriod, pProduct, 'Maximum', 'Value');

if(pWeight @= 'Minimum' & pValue >= nMaxValue & nMinValue <> 0);
#  LogOutput('INFO', 'Minimum érték nem lehet nagyobb, mint a Maximum érték!');
  ProcessQuit;
endif;

if(pWeight @= 'Maximum' & pValue <= nMinValue & nMaxValue <> 0);
#  LogOutput('INFO', 'Maximum érték nem lehet kisebb, mint a Minimum érték!');
  ProcessQuit;
endif;
if(pPeriod @= sActualYear);
  sStartMonthI= HierarchySubsetElementGetIndex(sDimName, sHierName, sSubsetName, sActualMonth, 1);
  i = sStartMonthI;
  while(i <= sENDMonthI);
    sPeriod = SubsetGetElementName(sDimName,sSubsetName, i);
		CellPutN(pValue, sCube, pVersion, sPeriod, pProduct, pWeight, 'Value');
	i = i + 1;
  end;

elseif((Long(pPeriod)=4) & (pPeriod @<> sActualYear));
  sStartMonth = pPeriod|'01';
  sStartMonthI = HierarchySubsetElementGetIndex(sDimName, sHierName, sSubsetName, sStartMonth, 1);
  i = sStartMonthI;
  while(i <= sENDMonthI);
    sPeriod = SubsetGetElementName(sDimName,sSubsetName, i);
		CellPutN(pValue, sCube, pVersion, sPeriod, pProduct, pWeight, 'Value');
	i = i + 1;
  end;
		   
else;
	sStartMonthI = HierarchySubsetElementGetIndex(sDimName, sHierName, sSubsetName, pPeriod, 1);
  i = sStartMonthI;
  while(i <= sENDMonthI);
    sPeriod = SubsetGetElementName(sDimName,sSubsetName, i);
		CellPutN(pValue, sCube, pVersion, sPeriod, pProduct, pWeight, 'Value');
	i = i + 1;
  end;
endif;
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****



# Módos Dávid 2024 02 13

sToday = Today(1);
CellPutS(sToday, '}ElementAttributes_Version', pVersion, 'Last Updated');
CellPutS(pUser, '}ElementAttributes_Version', pVersion, 'Last Updated By');


#endregion
