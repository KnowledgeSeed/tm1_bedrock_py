#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# Módos Dávid 2024 05 20


# 2 fajta van.
# Migrációért járó:	cél termék - forrás termék migrációs pont		
# Új szerződéshez járó: termék és az érte járó pont		 új szerződés pontértéke



#sAllNTimeSubset = 'Actual Period N Level';
sAllNTimeSubset = 'All N';
sPeriodDim = 'Period';
nStartPeriod = 1;
nMaxPeriodLen = SubsetGetSize(sPeriodDim, sAllNTimeSubset);


  
sAllProductSubset = 'Total Products All N';
sSourceProductDim = 'Source Product';
sProductDim = 'Product';
nMaxProductLen = SubsetGetSize(sProductDim, sAllProductSubset);


i = nStartPeriod;
While(i <= nMaxPeriodLen);
  sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
  CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Uj szerzodesekert jaro pontok', 'Value');
  CellPutN(0, 'Marketing Cost', pVersion, sInputPeriod, 'Migracioert jaro pontok', 'Value');
  i = i+1;
END;

#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****


# 2 fajta van.
# Migrációért járó:	cél termék - forrás termék migrációs pont		
# Új szerződéshez járó: termék és az érte járó pont		 új szerződés pontértéke


## újért járó pont

nNewMigPoint = CellGetN('}ElementAttributes_Product', vProduct, 'New Contract Point');

i = nStartPeriod;
While(i <= nMaxPeriodLen);
  sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
  nNewContract = CellGetN('Subscription Plan', pVersion, sInputPeriod, 'Total', 'Total', 'New', vProduct, 'New increase', 'Final Value');
  nNewMigPointPerProduct = nNewMigPoint * nNewContract;
  CellIncrementN(nNewMigPointPerProduct, 'Marketing Cost', pVersion, sInputPeriod, 'Uj szerzodesekert jaro pontok', 'Value');
  
  i = i+1;
END;


# Migrációért járó:	cél termék - forrás termék migrációs pont	

i = nStartPeriod;
While(i <= nMaxPeriodLen);
  sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
  
  nProductI = 1;
  While(nProductI <= nMaxProductLen);
    sInputProduct = SubsetGetElementName(sProductDim, sAllProductSubset, nProductI);
    nSourceProdMigPoint = CellGetN('}ElementAttributes_Product', sInputProduct, 'Migration Point');
    nTargetProdMigPoint = CellGetN('}ElementAttributes_Product', vProduct, 'Migration Point');
    nTargerMinusSource = nTargetProdMigPoint - nSourceProdMigPoint;
    
    
    IF( nTargerMinusSource > 0  );
        nTranzactionNumber = CellGetN('Subscription Plan', pVersion, sInputPeriod, 'Total', 'Total', sInputProduct, vProduct, 'Upward migration increase', 'Final Value');
        nTotalGiftPoint = nTranzactionNumber * nTargerMinusSource;
        CellIncrementN(nTotalGiftPoint, 'Marketing Cost', pVersion, sInputPeriod, 'Migracioert jaro pontok', 'Value');
    ENDIF;
    
    nProductI = nProductI + 1;  
    END;
  
  i = i+1;
END;





#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
