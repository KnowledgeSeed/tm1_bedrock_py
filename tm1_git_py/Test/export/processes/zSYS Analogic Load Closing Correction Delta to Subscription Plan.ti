#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****
#pVersion = 'Base';
sLoyalty = '0';
sSalesChannel = 'Customer Service';
# digitális családi
#vProduct = '214';

if(pVersion @= '');
  pVersion = 'Base';
endif;

sPeriodDimName = 'Period';
sPeriodSubsetName = 'All N';
sCurrentMonth = CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type');
nCurrentMonthNumber = SubsetElementGetIndex(sPeriodDimName, sPeriodSubsetName, sCurrentMonth, 1);
nLastActualMonthNumber = nCurrentMonthNumber - 1;

sOpeningMonth = CellGetS('zSYS Maintenance Parameter', 'OpeningMonth', 'S Type');




#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
IF( pAllPeriod = 1);

i=2;

While(i <= nLastActualMonthNumber);
  sPeriod = SubsetGetElementName(sPeriodDimName,sPeriodSubsetName, i);

  IF( stringtonumber(sPeriod) > stringtonumber(sOpeningMonth));

    nFactClosing = CellGetN('Subscription Report', pVersion, sPeriod, 'Total', 'Total', vProduct, 'Corrected Closing Value');
    nCalculatedClosing = CellGetN('Subscription Plan', pVersion, sPeriod, 'Total', 'Total', 'Total Products', vProduct, 'Closing', 'Final Value');
  
    nDifference = nFactClosing - nCalculatedClosing;
    
    if(nDifference < 0);
    nDifference = abs(nDifference);
      CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, vProduct, 'Terminated', 'Terminated increase', 'Base Correction');
      CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, 'Terminated', vProduct, 'Terminated decrease', 'Base Correction');
    elseif( nDifference = 1);
    
    elseif(nDifference > 0);
    nDifference = abs(nDifference);
      CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, 'New', vProduct, 'New increase', 'Base Correction');
      CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, vProduct, 'New', 'New decrease', 'Base Correction');
    endif;
  
  ENDIF;

  i = i+1;
END;
ENDIF;

#######



IF( pLastYear = 1);
  i=2;

  While(i <= nLastActualMonthNumber);
    
    sPeriod = SubsetGetElementName(sPeriodDimName,sPeriodSubsetName, i);
    sPeriodSubsetNameLastYear = 'Last_Actual_Year';
      IF ( SubsetElementExists('Period', sPeriodSubsetNameLastYear, sPeriod) = 1);
      nFactClosing = CellGetN('Subscription Report', pVersion, sPeriod, 'Total', 'Total', vProduct, 'Corrected Closing Value');
      nCalculatedClosing = CellGetN('Subscription Plan', pVersion, sPeriod, 'Total', 'Total', 'Total Products', vProduct, 'Closing', 'Final Value');
    
      nDifference = nFactClosing - nCalculatedClosing;
      
      if(nDifference < 0);
      nDifference = abs(nDifference);
        CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, vProduct, 'Terminated', 'Terminated increase', 'Base Correction');
        CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, 'Terminated', vProduct, 'Terminated decrease', 'Base Correction');
      elseif( nDifference = 1);
      
      elseif(nDifference > 0);
      nDifference = abs(nDifference);
        CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, 'New', vProduct, 'New increase', 'Base Correction');
        CellPutN(nDifference, 'Subscription Plan', pVersion, sPeriod, sLoyalty, sSalesChannel, vProduct, 'New', 'New decrease', 'Base Correction');
        endif;
      ENDIF;
  i = i+1;
# while end
END;


# last year
ENDIF;






#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

CellPutN(0, 'zSYS Maintenance Parameter', 'NaturaliaSynchron', 'N type');
#endregion
