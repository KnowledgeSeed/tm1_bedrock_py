#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****
# Módos Dávid 2024 01 10

sPeriod = 'Period';
sMeasureNumeric = 'N Type';
sMeasureString = 'S Type';

# összes N-es elem kivéve input

sAllNTypePeriodSubset = 'Current Period N level';

# inflációt csak éves szinten lehet inputolni

IF( pPlanningDriver @= 'Inflation' );
	IF( pInputType = 0 );
		nNumberValue = StringToNumber( pValue );
		sPeriodInput = pPeriod | '_Input';
		nNumberValuePercent = nNumberValue \ 100;
		CellPutN( nNumberValuePercent, 'Planning Driver', pVersion, sPeriodInput, 'Inflation', 
			sMeasureNumeric );
	ENDIF;
ENDIF;
IF( pPlanningDriver @= 'EUR/HUF' );
	IF( pInputType = 0 );
		nNumberValue = StringToNumber( pValue );
		CellPutN( nNumberValue, 'Planning Driver', pVersion, pPeriod, 'EUR/HUF', sMeasureNumeric );
	ENDIF;
	IF( pInputType = 1 );
		nNumberValue = StringToNumber( pValue );
		nStartPeriod = HierarchySubsetElementGetIndex( sPeriod, sPeriod, sAllNTypePeriodSubset, pPeriod, 1 );
		nLastPeriod = HierarchySubsetGetSize( sPeriod, sPeriod, sAllNTypePeriodSubset );
		i = nStartPeriod;
		WHILE( i <= nLastPeriod );
			sActualPeriod = HierarchySubsetGetElementName( sPeriod, sPeriod, sAllNTypePeriodSubset, i );
			CellPutN( nNumberValue, 'Planning Driver', pVersion, sActualPeriod, 'EUR/HUF', sMeasureNumeric );
			i = i+1;
		END;
	ENDIF;

	# IF( pPlanningDriver @= 'EUR')

ENDIF;
IF( pPlanningDriver @= 'USD/HUF' );
	IF( pInputType = 0 );
		nNumberValue = StringToNumber( pValue );
		CellPutN( nNumberValue, 'Planning Driver', pVersion, pPeriod, 'USD/HUF', sMeasureNumeric );
	ENDIF;
	IF( pInputType = 1 );
		nNumberValue = StringToNumber( pValue );
		nStartPeriod = HierarchySubsetElementGetIndex( sPeriod, sPeriod, sAllNTypePeriodSubset, pPeriod, 1 );
		nLastPeriod = HierarchySubsetGetSize( sPeriod, sPeriod, sAllNTypePeriodSubset );
		i = nStartPeriod;
		WHILE( i <= nLastPeriod );
			sActualPeriod = HierarchySubsetGetElementName( sPeriod, sPeriod, sAllNTypePeriodSubset, i );
			CellPutN( nNumberValue, 'Planning Driver', pVersion, sActualPeriod, 'USD/HUF', sMeasureNumeric );
			i = i+1;
		END;
	ENDIF;

	# IF( pPlanningDriver @= 'USD')

ENDIF;

#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
