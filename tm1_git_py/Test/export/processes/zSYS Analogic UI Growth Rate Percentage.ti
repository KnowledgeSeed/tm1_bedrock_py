#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****


# pLedger
# pValue
# pVersion

# Az utolsó tény hónapot megnöveli egy adott szézalékkal
# Ez az értéket beírja a tervezendő period végéig

# melyik kockában van a főkönyv
sCube = CellGetS('}ElementAttributes_ledger', pLedger, 'sourceCube');
sAllNTimeSubset = 'Current Period N level';

sPeriodDim = 'Period';
sActualMonth = CellGetS('zSYS Maintenance Parameter', 'ActualMonth', 'S Type');
sActualMonthIndex = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sActualMonth);
nLastActualPeriodIndex = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sActualMonth) - 1;
sLastActualPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, nLastActualPeriodIndex);
nEndPeriodIndex = SubsetGetSize(sPeriodDim, sAllNTimeSubset);

IF( sCube @= 'Revenue');
  sRevenueMeasure = 'Value';
  sProduct = 'Nem tartozik termekhez';
  sLineitem = 'Bevetel';
  # utolsó tény hónap
  nLastMonthValue = CellGetN('Revenue', pVersion, sLastActualPeriod, pLedger, sProduct, sLineitem, sRevenueMeasure);
  
  # új érték megnövelve
  nGrowthRate = (stringToNumber(pValue)\100) + 1;
  nNewValue = nLastMonthValue * nGrowthRate;
  
  i = sActualMonthIndex;
  While(i <= nEndPeriodIndex);
    sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
    CellPutN(nNewValue, 'Revenue',  pVersion, sInputPeriod, pLedger, sProduct, sLineitem, sRevenueMeasure);
    i = i+1;
  END;
ENDIF;


#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
