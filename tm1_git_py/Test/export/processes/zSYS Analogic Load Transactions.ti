#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****
#Mody 2023.07.14.
# ODBC data source

### Módos Dávid Data javítva 06 14
### ellenkező mozgásnem könyvelése

#Epilogban hozzáadva, ha a target 0, akkor módosítsa a mozgásnemet 08.24. Miki

# Fix Parameters
sCubeName = 'Subscription Plan';

sMeasure_Write = 'Base Input';

sDimensionName_SourceProduct = 'Source Product';
sDimensionName_TargetProduct = 'Target Product';

sDecimalSeparator = '.';
sThousandSeparator = '';

DataSourceType = 'ODBC';


nMetaRowIndex = 0;
nDataRowIndex = 0;


sVersion = pVersion;
sOpeningMonth = CellGetS('zSYS Maintenance Parameter', 'OpeningMonth', 'S Type');
sActualMonth = CellGetS('zSYS Maintenance Parameter', 'ActualMonth', 'S Type');
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****

# 2 termék tranzakcióit ki kell venni mert negatívban menne a záróértékek
# VIP PAK/3 ID=736
If( vTargetProductID @= '736' % vSourceProductID @= '736');
  itemskip;
ENDIF;
# 60/12 TESZT ID=27
If( vTargetProductID @= '27' % vSourceProductID @= '27');
  itemskip;
ENDIF;


If(vSalesChannel @= 'CC');
    vSalesChannel = 'Call Center';
EndIf;

If(vSalesChannel @= 'USZ' % vSalesChannel @= '');
    vSalesChannel = 'Customer Service';
EndIf;

If(vSourceProductID @= '');
    vSourceProductID = 'New';
EndIf;

If(vSourceProductID @= '0');
    vSourceProductID = 'New';
EndIf;

If(vTargetProductID @= '');
    vTargetProductID = 'Terminated';
EndIf;

#Lemaradt
If(vTargetProductID @= '0');
    vTargetProductID = 'Terminated';
EndIf;

If(vLoyalty @= '2');
    vLoyalty = '1';
EndIf;

If(vLoyalty @= '');
    vLoyalty = '0';
EndIf;

If(DimensionElementExists(sDimensionName_SourceProduct, vSourceProductID) = 0);
  ItemSkip;
EndIf;

If(DimensionElementExists(sDimensionName_TargetProduct, vTargetProductID) = 0);
  ItemSkip;
EndIf;

IF( pAllPeriod = 1);
    sPeriodSubsetName = 'Planning Period';
    IF ( SubsetElementExists('Period', sPeriodSubsetName, vDate) = 0);  
        sMovement = CellGetS('Subscription Movement Assignment', vSourceProductID, vTargetProductID, 'Closing', 'Movement Name');
        if(sMovement @= '');
          sMovement = 'Illegal Movement From Actual';
        endif;
        
        sOppositeMovement = AttrS('Subscription Plan Movement', sMovement, 'Opposite');
        CellPutN(0, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vSourceProductID, vTargetProductID, sMovement, sMeasure_Write);
        CellPutN(0, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vTargetProductID, vSourceProductID, sOppositeMovement, sMeasure_Write);
    ENDIF;

# ENd all period
ENDIF;
    
IF( pLastYear = 1);

    sPeriodSubsetName = 'Last_Actual_Year';
    IF ( SubsetElementExists('Period', sPeriodSubsetName, vDate) = 1);
        sMovement = CellGetS('Subscription Movement Assignment', vSourceProductID, vTargetProductID, 'Closing', 'Movement Name');
        if(sMovement @= '');
          sMovement = 'Illegal Movement From Actual';
        endif;
        
        sOppositeMovement = AttrS('Subscription Plan Movement', sMovement, 'Opposite');
        CellPutN(0, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vSourceProductID, vTargetProductID, sMovement, sMeasure_Write);
        CellPutN(0, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vTargetProductID, vSourceProductID, sOppositeMovement, sMeasure_Write);
    ENDIF;

# ENd all period
ENDIF;    
    
    
    
    
    
    
    
    
    
    
    
    
    
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

# 2 termék tranzakcióit ki kell venni mert negatívban menne a záróértékek
# VIP PAK/3 ID=736
If( vTargetProductID @= '736' % vSourceProductID @= '736');
  itemskip;
ENDIF;
# 60/12 TESZT ID=27
If( vTargetProductID @= '27' % vSourceProductID @= '27');
  itemskip;
ENDIF;

If(vSalesChannel @= 'CC');
    vSalesChannel = 'Call Center';
EndIf;
If(vSalesChannel @= 'USZ' % vSalesChannel @= '');
    vSalesChannel = 'Customer Service';
EndIf;

If(vSourceProductID @= '');
    vSourceProductID = 'New';
EndIf;

If(vSourceProductID @= '0');
    vSourceProductID = 'New';
EndIf;

If(vTargetProductID @= '');
    #vTargetProductID = 'Terminated';
    ItemSkip;
EndIf;

#Lemaradt
If(vTargetProductID @= '0');
    #vTargetProductID = 'Terminated';
    ItemSkip;
EndIf;

If(vLoyalty @= '2');
    vLoyalty = '1';
EndIf;

If(vLoyalty @= '');
    vLoyalty = '0';
EndIf;
If(DimensionElementExists(sDimensionName_SourceProduct, vSourceProductID) = 0);
  ItemSkip;
EndIf;

If(DimensionElementExists(sDimensionName_TargetProduct, vTargetProductID) = 0);
  ItemSkip;
EndIf;

IF( pAllPeriod = 1);
#    sPeriodSubsetName = 'Planning Period';
#    IF ( SubsetElementExists('Period', sPeriodSubsetName, vDate) = 0);  

  IF( stringtonumber(vDate) > stringtonumber(sOpeningMonth) & stringtonumber(vDate) < stringtonumber(sActualMonth));

    ### ellenkező mozgásnem könyvelése
    sMovement = CellGetS('Subscription Movement Assignment', vSourceProductID, vTargetProductID, 'Closing', 'Movement Name');
    if(sMovement @= '');
      sMovement = 'Illegal Movement From Actual';
    endif;
    sOppositeMovement = AttrS('Subscription Plan Movement', sMovement, 'Opposite');

    nCount = StringToNumberEx(vCount, sDecimalSeparator , sThousandSeparator);
  
    # U.D. 2023.09.13 - javítás incrementre cellput helyett
    CellIncrementN(nCount, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vSourceProductID, vTargetProductID, sMovement, sMeasure_Write);
    CellIncrementN(nCount, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vTargetProductID, vSourceProductID, sOppositeMovement, sMeasure_Write);
  ENDIF;
  
#IF( pAllPeriod = 1);
ENDIF;



IF( pLastYear = 1);
  sPeriodSubsetName = 'Last_Actual_Year';
  IF ( SubsetElementExists('Period', sPeriodSubsetName, vDate) = 1);  
      
    IF( stringtonumber(vDate) > stringtonumber(sOpeningMonth) & stringtonumber(vDate) < stringtonumber(sActualMonth));

      ### ellenkező mozgásnem könyvelése
      sMovement = CellGetS('Subscription Movement Assignment', vSourceProductID, vTargetProductID, 'Closing', 'Movement Name');
      if(sMovement @= '');
        sMovement = 'Illegal Movement From Actual';
      endif;
      sOppositeMovement = AttrS('Subscription Plan Movement', sMovement, 'Opposite');
      
      nCount = StringToNumberEx(vCount, sDecimalSeparator , sThousandSeparator);
    
      # U.D. 2023.09.13 - javítás incrementre cellput helyett
      CellIncrementN(nCount, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vSourceProductID, vTargetProductID, sMovement, sMeasure_Write);
      CellIncrementN(nCount, sCubeName, sVersion, vDate, vLoyalty, vSalesChannel, vTargetProductID, vSourceProductID, sOppositeMovement, sMeasure_Write);
    ENDIF;
  ENDIF;
  
#IF( pAllPeriod = 1);
ENDIF;


#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

#endregion
