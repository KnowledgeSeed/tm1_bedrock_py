#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****



nInputValue = stringToNumber(pValue);
sMeasre = 'Value';
sLoyaltyExtensionRatio = 'Loyalty Extension Ratio';
sAllNTimeSubset = 'Actual Period N level';
sPeriodDim = 'Period';

#1: one value
# sima hónap
# éves
IF(pMode = 1);
  # sima hónap
  IF( Long(pPeriod) = 6);
    # ki kell majd cserélni
    CellPutN(nInputValue, 'Weight and Limit', pVersion, pPeriod, pProduct, sLoyaltyExtensionRatio, sMeasre);

  ENDIF;
  
  # éves
  IF( Long(pPeriod) = 4);
    nInputValueHavi = nInputValue;
    i=1;
    WHILE( i<=12);
      sActualPeriod = pPeriod | numberToString(i);
      IF( i<10);
        sActualPeriod = pPeriod | '0' | numberToString(i);
      ENDIF;
      CellPutN(nInputValueHavi, 'Weight and Limit', pVersion, sActualPeriod, pProduct, sLoyaltyExtensionRatio, sMeasre);
      i=i+1;
    END;
  ENDIF;
#1: one value end
ENDIF;

#2: more month
# sima hónap
# éves
IF(pMode = 2);
  # sima hónap
  IF( Long(pPeriod) = 6);
    sPeriodStartMonth = pPeriod;
    nMaxPlanningPeriodSubsetLen = SubsetGetSize(sPeriodDim, sAllNTimeSubset);
    i = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sPeriodStartMonth);
    While(i <= nMaxPlanningPeriodSubsetLen);
      sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
      CellPutN(nInputValue, 'Weight and Limit', pVersion, sInputPeriod, pProduct, sLoyaltyExtensionRatio, sMeasre);
      i = i+1;
    END;
  ENDIF;
  
  # éves
  IF( Long(pPeriod) = 4);
    nInputValueHavi = nInputValue;
    sPeriodStartMonth = pPeriod | '01';
    nMaxPlanningPeriodSubsetLen = SubsetGetSize(sPeriodDim, sAllNTimeSubset);
    i = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sPeriodStartMonth);
    While(i <= nMaxPlanningPeriodSubsetLen);
      sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
      CellPutN(nInputValue, 'Weight and Limit', pVersion, sInputPeriod, pProduct, sLoyaltyExtensionRatio, sMeasre);
      i = i+1;
    END;
  ENDIF;
##2: more month end
ENDIF;
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

sToday = Today(1);
CellPutS(sToday, '}ElementAttributes_Version', pVersion, 'Last Updated');
CellPutS(pUser, '}ElementAttributes_Version', pVersion, 'Last Updated By');
#endregion
