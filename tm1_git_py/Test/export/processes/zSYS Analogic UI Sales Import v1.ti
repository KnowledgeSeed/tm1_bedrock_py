#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

nFirstDataCol        = 2;
nLastDataCol         = 43;
nLastDataRow         = 8;
nMovementCol               = 1;
nProductCol               = 1;
sActualPeriod        = CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type');

sDimSource = 'Source Product';
sDimTarget = 'Target Product';
sAttributeName = 'Migration Point';

nNumberOfCol = nLastDataCol - nFirstDataCol + 1;
pFileLocation = CellGetS('zSYS Maintenance Parameter', 'Import Data Directory Path', 'S Type');
sFile = pFileLocation | pFileName;

nCurrentPeriod = TimSt(Now(), '\Y\m');

sColumnDelimiter = If ( pColumnDelimiter @= '' , ',' , pColumnDelimiter );
sDecimalSeparator = If ( pDecimalSeparator @= '' , '.' , pDecimalSeparator );
sThousandSeparator = pThousandSeparator;
#sQuoteChar = If ( pQuoteChar @= '' , '"' , pQuoteChar );
sQuoteChar = pQuoteChar;
#sCharacterSet = If ( pCharacterSet @= '' , 'TM1CS_UTF8' , pCharacterSet );
sCharacterSet = pCharacterSet;
nHeaderRow = If ( pHeaderRow @= '' , 1 , Numbr ( pHeaderRow ) );

# define and set CSV as data source

DataSourceType = 'CHARACTERDELIMITED';
DataSourceNameForServer = sFile;
DataSourceNameForClient = sFile;
DatasourceASCIIHeaderRecords = nHeaderRow;
DatasourceASCIIQuoteCharacter = sQuoteChar;
DataSourceASCIIDelimiter = sColumnDelimiter;
SetInputCharacterSet ( sCharacterSet );
nRowIndex = 0;
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

nRowIndex = nRowIndex + 1;

if(nRowIndex = 1);
  sGroup  =  Expand('%v'| NumberToString(nFirstDataCol + 2) |'%');
  sGroupTotal = sGroup|' Total';
  sPage  =  Expand('%v'| NumberToString(nFirstDataCol + 6) |'%');
  sLoyalty = Expand('%v'| NumberToString(nFirstDataCol + 14) |'%');
  if(sLoyalty @='Σ');
    sLoyalty = 'Total';
  elseif(LONG(sLoyalty)>1 & sLoyalty@<>'Total');
    sLoyalty = DELET(sLoyalty,2,2);
  endif;
  
  if(sPage @= 'movement');
    sSource  =  Expand('%v'| NumberToString(nFirstDataCol + 8) |'%');
    sChannel = Expand('%v'| NumberToString(nFirstDataCol + 10) |'%');
    sTarget = Expand('%v'| NumberToString(nFirstDataCol + 12) |'%');

    
  elseif (sPage @= 'channel');
    sSource  =  Expand('%v'| NumberToString(nFirstDataCol + 8) |'%');
    sTarget = Expand('%v'| NumberToString(nFirstDataCol + 10) |'%');
    sMovement = Expand('%v'| NumberToString(nFirstDataCol + 12) |'%');
    
  elseif (sPage @= 'source');
    sChannel  =  Expand('%v'| NumberToString(nFirstDataCol + 8) |'%');
    sTarget = Expand('%v'| NumberToString(nFirstDataCol + 10) |'%');
    sMovement = Expand('%v'| NumberToString(nFirstDataCol + 12) |'%');
    
  elseif (sPage @= 'target');
    sSource  =  Expand('%v'| NumberToString(nFirstDataCol + 8) |'%');
    sChannel = Expand('%v'| NumberToString(nFirstDataCol + 10) |'%');
    sMovement = Expand('%v'| NumberToString(nFirstDataCol + 12) |'%');
  endif;

elseif(nRowIndex = 4);
  
  # set groupname variables - in case of new groups, add it here
  
  sCol1  =  Expand('%v'| NumberToString(nFirstDataCol + 0) |'%');
  sCol2  =  Expand('%v'| NumberToString(nFirstDataCol + 1) |'%');
  sCol3  =  Expand('%v'| NumberToString(nFirstDataCol + 2) |'%');
  sCol4  =  Expand('%v'| NumberToString(nFirstDataCol + 3) |'%');
  sCol5  =  Expand('%v'| NumberToString(nFirstDataCol + 4) |'%');
  sCol6  =  Expand('%v'| NumberToString(nFirstDataCol + 5) |'%');
  sCol7  =  Expand('%v'| NumberToString(nFirstDataCol + 6) |'%');
  sCol8  =  Expand('%v'| NumberToString(nFirstDataCol + 7) |'%');
  sCol9  =  Expand('%v'| NumberToString(nFirstDataCol + 8) |'%');
  sCol10 =  Expand('%v'| NumberToString(nFirstDataCol + 9) |'%');
  sCol11 =  Expand('%v'| NumberToString(nFirstDataCol + 10) |'%');
  sCol12 =  Expand('%v'| NumberToString(nFirstDataCol + 11) |'%');
  sCol13 =  Expand('%v'| NumberToString(nFirstDataCol + 12) |'%');
  sCol14 =  Expand('%v'| NumberToString(nFirstDataCol + 13) |'%');
  sCol15 =  Expand('%v'| NumberToString(nFirstDataCol + 14) |'%');
  sCol16 =  Expand('%v'| NumberToString(nFirstDataCol + 15) |'%');
  sCol17 =  Expand('%v'| NumberToString(nFirstDataCol + 16) |'%');
  sCol18 =  Expand('%v'| NumberToString(nFirstDataCol + 17) |'%');
  sCol19 =  Expand('%v'| NumberToString(nFirstDataCol + 18) |'%');
  sCol20 =  Expand('%v'| NumberToString(nFirstDataCol + 19) |'%');
  sCol21 =  Expand('%v'| NumberToString(nFirstDataCol + 20) |'%');
  sCol22 =  Expand('%v'| NumberToString(nFirstDataCol + 21) |'%');
  sCol23 =  Expand('%v'| NumberToString(nFirstDataCol + 22) |'%');
  sCol24 =  Expand('%v'| NumberToString(nFirstDataCol + 23) |'%');
  sCol25 =  Expand('%v'| NumberToString(nFirstDataCol + 24) |'%');
  sCol26 =  Expand('%v'| NumberToString(nFirstDataCol + 25) |'%');
  sCol27 =  Expand('%v'| NumberToString(nFirstDataCol + 26) |'%');
  sCol28 =  Expand('%v'| NumberToString(nFirstDataCol + 27) |'%');
  sCol29 =  Expand('%v'| NumberToString(nFirstDataCol + 28) |'%');
  sCol30 =  Expand('%v'| NumberToString(nFirstDataCol + 29) |'%');
  sCol31 =  Expand('%v'| NumberToString(nFirstDataCol + 30) |'%');
  sCol32 =  Expand('%v'| NumberToString(nFirstDataCol + 31) |'%');
  sCol33 =  Expand('%v'| NumberToString(nFirstDataCol + 32) |'%');
  sCol34 =  Expand('%v'| NumberToString(nFirstDataCol + 33) |'%');
  sCol35 =  Expand('%v'| NumberToString(nFirstDataCol + 34) |'%');
  sCol36 =  Expand('%v'| NumberToString(nFirstDataCol + 35) |'%');
  sCol37 =  Expand('%v'| NumberToString(nFirstDataCol + 36) |'%');
  sCol38 =  Expand('%v'| NumberToString(nFirstDataCol + 37) |'%');
  sCol39 =  Expand('%v'| NumberToString(nFirstDataCol + 38) |'%');
  sCol40 =  Expand('%v'| NumberToString(nFirstDataCol + 39) |'%');
  sCol41 =  Expand('%v'| NumberToString(nFirstDataCol + 40) |'%');
  sCol42 =  Expand('%v'| NumberToString(nFirstDataCol + 41) |'%');
  
  
else;
  
  if(sPage @= 'movement');
    sMovement = Expand('%v'| NumberToString(nMovementCol) |'%');
    if(sMovement @= '');
      itemskip;
    endif;
  
  elseif(sPage @= 'channel');
    sChannel = Expand('%v'| NumberToString(nMovementCol) |'%');
    if(sChannel@='Total');
      itemskip;
    endif;
  
  elseif(sPage @= 'source');
    sSource = Expand('%v'| NumberToString(nMovementCol) |'%');
    if(sSource @= '');
      itemskip;
#    elseif(SCAN(sSource,sGroup)>0);
#      sSource = sSource| ' Total';
    elseif(sSource @= 'D+Közszolgálati' & sSource @= 'D+I.' & sSource @= sGroupTotal);
      itemskip;
    endif;
  
  elseif(sPage @= 'target');
    sTarget = Expand('%v'| NumberToString(nMovementCol) |'%');
    if(sTarget @= '');
      itemskip;
#    elseif(SCAN(sTarget,sGroup)>0);
#      sTarget = sTarget| ' Total';
    elseif(sTarget @= 'D+Közszolgálati' & sTarget @= 'D+I.');
      itemskip;
    endif;
  endif;

  sMovement = DimensionElementPrincipalName('Subscription Plan Movement', sMovement);

  nColumn = nFirstDataCol;
  sCurrentYear = '0';
  
  sMovementlvl = ELLEV('Subscription Plan Movement', sMovement);
#  LogOutput('INFO', ' - Movement: ' |sMovement | ' - lvl: ' | numbertostring(sMovementlvl));
  
#  Felesleges string leszedése
  if(Scan('.1',sSource)>0);
    sSource = Delet(sSource,Scan('.1',sSource),Long('.1'));
  endif;
  if(Scan('.1',sTarget)>0);
    sTarget = Delet(sTarget,Scan('.1',sTarget),Long('.1'));
  endif;
  
  sSource = DimensionElementPrincipalName('Product', sSource);
  sTarget = DimensionElementPrincipalName('Product', sTarget);

  while(nColumn <= nLastDataCol);
    sCurrentDate = Expand('%sCol'| NumberToString(nColumn - nFirstDataCol + 1) |'%');
    nCurrentDate = StringToNumberEx(sCurrentDate, sDecimalSeparator, sThousandSeparator);
    sCurrentDate = numbertostring(nCurrentDate);
    sInputfield = CellGetN('Subscription Movement Assignment', sSource, sTarget, sMovement, 'Stored');
    
    if(Long(sCurrentDate) = 4);
      sCurrentYear = sCurrentDate;
    else;
      sCurrentDate = sCurrentYear | Fill('0', 2-Long(sCurrentDate)) | sCurrentDate;
    if(DimIx('Period', sCurrentDate) >= DimIx('Period', sActualPeriod));
      sCurrentValue = Expand('%v'| NumberToString(nColumn) |'%');
      nCurrentValue = StringToNumberEX(sCurrentValue, pDecimalSeparator, pThousandSeparator);
        if(sMovement@<>'Contracts total' & sMovement@<>'Migration increase' & sInputfield >0);
#          LogOutput('INFO',' - Source: ' | sSource|' - Target: ' | sTarget| ' - Movement: ' |sMovement| ' - Loyalty: ' | sLoyalty | ' - Channel: ' |sChannel|' - Date: ' |sCurrentDate|' - Group: ' |sGroup|' - Value: ' | numbertostring(nCurrentValue));
#            ASCIIOutput('d:\TM1 Models\Vidanet\DataSource\test.csv', sSource, sTarget, sMovement, sChannel, sLoyalty, sCurrentDate, sGroup, sCurrentValue);
          ExecuteProcess('zSYS Analogic UI Subscription Plan Input Spread Period',
              'pSourceProduct', sSource,
              'pTargetProduct', sTarget,
              'pMovement', sMovement,
              'pLoyalty', sLoyalty,
              'pChannel', sChannel,
              'pPeriod', sCurrentDate,
              'pMaincategory', sGroup,
              'pInput', nCurrentValue
             );
        endif;
      endif;
    endif;
  nColumn = nColumn + 1;
  end;
endif;
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
