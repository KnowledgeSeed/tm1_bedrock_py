skipcheck;

### FEEDER 03
# C-es closing
['Subscription Topdown Movement':'Subscription Topdown Movement':'Closing'] = C:
IF( ELLEV('Period',!Period)>0,
  DB('Subscription Topdown', !Version, DB('}ElementAttributes_Period', !Period, 'Last_M_Y'), !Product, !Subscription Topdown Movement, !Subscription Topdown Measure),
  STET); 

['Subscription Topdown Measure':'Base'] = stet;

#Connecting back the TD UI input and Matrix input numbers
['Subscription Topdown Measure':{'TD UI Input','Matrix UI Input'},'Subscription Topdown Movement':'Loyalty extension'] = N:
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, 'Loyalty extension increase', !Subscription Topdown Measure);

['Subscription Topdown Measure':'TD UI Input'] = N:
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, !Subscription Topdown Movement, 'TD UI Input')+
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, !Subscription Topdown Movement, 'TD UI Input Rounding Correction')+
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, !Subscription Topdown Movement, 'TD UI Input Counter Booking');


['Subscription Topdown Measure':'Matrix UI Input'] = N:
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, !Subscription Topdown Movement, 'Matrix UI Input');

#Connecting back the transaction limit corrections
['Subscription Topdown Measure':'Transaction Limit Correction'] = N:
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, !Subscription Topdown Movement, 'Transaction Min Limit Correction')+
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, !Subscription Topdown Movement, 'Transaction Max Limit Correction')+
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', DB('}ElementAttributes_Product', !Product, 'Product Category')|' Total', !product, !Subscription Topdown Movement, 'Transaction Limit Balance Correction');

#Internal Calculation for Minimum Limits
['Subscription Topdown Movement':'Terminated decrease','Subscription Topdown Measure':'Min Limit Input'] =N:
#IF Check Closing - Min Limit < 0 akkor * -1 else * 0
SIGN(MIN(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']
-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'),0))
*(
#IF CASE A Only from termination back increasing we turn above limit
# Closing + Terminate - Min Limit > 0 then Terminate - Limit else 0
SIGN(MAX(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']
+['Subscription Topdown Measure':'Limit Correction Closing Check','Terminated decrease']
-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'),0)) * 
(['Subscription Topdown Measure':'Limit Correction Closing Check','Terminated decrease']
-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'))
# IF CASE B Closing + Terminate-limit still < 0 then Terminate else 0
-SIGN(MIN(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']
+['Subscription Topdown Measure':'Limit Correction Closing Check','Terminated decrease']
-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'),0)) * 
['Subscription Topdown Measure':'Limit Correction Closing Check','Terminated decrease']);

['Subscription Topdown Movement':'Migration decrese','Subscription Topdown Measure':'Min Limit Input'] =N:
#IF Check Closing + terminated - Min Limit < 0 akkor * -1 else * 0 ->> ERGO Terminate B Case still not enoguh
SIGN(MIN(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+['Subscription Topdown Measure':'Limit Correction Closing Check','Terminated decrease']
-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'),0))
*(
#IF CASE A all termination back and some of the migration decrese enough to increasing to turn above limit
# Closing + Terminate + Migration Decrese - Min Limit > 0 then Migration decrese - Limit else 0
SIGN(MAX(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+['Subscription Topdown Measure':'Limit Correction Closing Check','Terminated decrease']
+['Subscription Topdown Measure':'Limit Correction Closing Check','Migration decrese']
-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'),0)) * 
(['Subscription Topdown Measure':'Limit Correction Closing Check','Migration decrese']-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'))
# IF CASE B Closing + Terminate + Migration Decrese -limit still < 0 then  Migration Decrese else 0
-SIGN(MIN(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+['Subscription Topdown Measure':'Limit Correction Closing Check','Terminated decrease']
+['Subscription Topdown Measure':'Limit Correction Closing Check','Migration decrese']
-DB('Weight and Limit', !Version, !Period, !Product, 'Minimum', 'Value'),0)) * 
['Subscription Topdown Measure':'Limit Correction Closing Check','Migration decrese']);

#Internal Calculation for Maximum Limits
['Subscription Topdown Movement':'New increase','Subscription Topdown Measure':'Max Limit Input'] =N:
#IF Check Closing - Min Limit < 0 akkor * -1 else * 0
SIGN(MIN(DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value')-['Subscription Topdown Measure':'Limit Correction Closing Check','Closing'],0))
*(
#IF CASE A Only from termination back increasing we turn above limit
# Closing + Terminate - Min Limit > 0 then Terminate - Limit else 0
SIGN(MAX(DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value')-
['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+['Subscription Topdown Measure':'Limit Correction Closing Check','New increase'],0)) * 
(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']-DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value'))
# IF CASE B Closing + Terminate-limit still < 0 then Terminate else 0
-SIGN(MIN(DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value')-
['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+['Subscription Topdown Measure':'Limit Correction Closing Check','New increase'],0)) * 
['Subscription Topdown Measure':'Limit Correction Closing Check','New Increase']);

['Subscription Topdown Movement':'Migration increase','Subscription Topdown Measure':'Max Limit Input'] =N:
#IF Check Closing + terminated - Min Limit < 0 akkor * -1 else * 0
SIGN(MIN(DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value')-['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+
['Subscription Topdown Measure':'Limit Correction Closing Check','New increase'],0))
*(
#IF CASE A Only from termination back increasing we turn above limit
# Closing + Terminate - Min Limit > 0 then Terminate - Limit else 0
SIGN(MAX(DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value')-['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+
['Subscription Topdown Measure':'Limit Correction Closing Check','New increase']+['Subscription Topdown Measure':'Limit Correction Closing Check','Migration increase'],0)) * 
(['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']-
['Subscription Topdown Measure':'Limit Correction Closing Check','New increase']-DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value'))
# IF CASE B Closing + Terminate-limit still < 0 then Terminate else 0
-SIGN(MIN(DB('Weight and Limit', !Version, !Period, !Product, 'Maximum', 'Value')-['Subscription Topdown Measure':'Limit Correction Closing Check','Closing']+
['Subscription Topdown Measure':'Limit Correction Closing Check','New increase']+['Subscription Topdown Measure':'Limit Correction Closing Check','Migration increase']+
['Subscription Topdown Measure':'Limit Correction Closing Check','Migration increase'],0)) * 
['Subscription Topdown Measure':'Limit Correction Closing Check','Migration increase']);


['Subscription Topdown Measure':'UI Input'] = N:
# zero flag > override -> zero flag is prefered when both of them is set, but normally only one should be
# if the zero flag is set, the value will be minus base
# if override is set, and zero flag is null, then value will be override minus base
abs(sign(['Subscription Topdown Measure':'Override'])) * (1-['Subscription Topdown Measure':'Zero Flag']) * (['Subscription Topdown Measure':'Override'] - ['Subscription Topdown Measure':'Base'])
+ ['Subscription Topdown Measure':'Zero Flag'] * (- ['Subscription Topdown Measure':'Base']);

feeders;



# New subscription and Termination gotdirect connection for UI Input
['Version':'Forecast','Subscription Topdown Movement':'New increase','Subscription Topdown Measure':'UI Input'] =>
['Version':'Forecast','Subscription Topdown Movement':'New increase','Subscription Topdown Measure':'TD UI Input'],
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', 'New', !product, 'New increase', 'TD UI Input');

['Version':'Forecast','Subscription Topdown Movement':'Terminated decrease','Subscription Topdown Measure':'UI Input'] =>
['Version':'Forecast','Subscription Topdown Movement':'Terminated decrease','Subscription Topdown Measure':'TD UI Input'],
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', 'Terminated', !product,  'Terminated decrease', 'TD UI Input');

['Version':'Forecast','Subscription Topdown Movement':'New increase','Subscription Topdown Measure':'Max Limit Input'] =>
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', 'New', !product, 'New increase', 'TD UI Input');

['Version':'Forecast','Subscription Topdown Movement':'Terminated decrease','Subscription Topdown Measure':'Min Limit Input'] =>
DB('Subscription Plan', !Version, !Period, 'NA', 'NA', 'Terminated', !product,  'Terminated decrease', 'Transaction Min Limit Correction');

['Version':'Forecast','Subscription Topdown Movement':'Opening','Subscription Topdown Measure':'Base'] =>
DB('Subscription Plan', !Version, !Period, 'NA', 'NA',!product, !product,  'Loyalty extension increase', 'Transaction Max Limit Correction');

#Internal feeders
['Version':'Forecast','Subscription Topdown Measure':'Limit Correction Closing Check','Closing'] =>
['Subscription Topdown Movement':'Terminated decrease','Subscription Topdown Measure':'Min Limit Input'],
['Subscription Topdown Movement':'Migration decrese','Subscription Topdown Measure':'Min Limit Input'],
['Subscription Topdown Movement':'New increase','Subscription Topdown Measure':'Max Limit Input'],
['Subscription Topdown Movement':'Migration increase','Subscription Topdown Measure':'Max Limit Input'];

['Subscription Topdown Measure':'Override'] => ['Subscription Topdown Measure':'UI Input'];
['Subscription Topdown Measure':'Zero Flag'] => ['Subscription Topdown Measure':'UI Input'];