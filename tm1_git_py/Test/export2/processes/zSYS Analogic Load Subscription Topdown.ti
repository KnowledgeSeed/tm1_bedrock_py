#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# =========================================================
# Original Date Created              2023.06.12
# Originator                         
# Purpose                            
# Change Date                             
# Change Request Reference                
# Change Made by                     
# =========================================================

#Opening
#New increase
#Migration increase
#Migration decrese
#Terminated decrease

sCubeExport = 'Subscription Plan';
sCubeTarget = 'Subscription Topdown';
sViewExport = 'Export Temp View';
sFilter = 'Version ¦ '|pVersion|'&';
#sFilter = sFilter | 'Subscription Plan Movement ¦ Opening + New increase + Migration increase + Migration decrese + Terminated decrease + Loyalty extension increase + Loyalty extension decrease &';

sFilter = sFilter | 'Subscription Plan Movement ¦ Opening + New increase + Migration increase + Migration decrese + Terminated decrease + Loyalty Extension &';
sFilter = sFilter | 'Loyalty ¦ Total &';
sFilter = sFilter | 'Sales Channel ¦ Total &';
sFilter = sFilter | 'Source Product ¦ Total Products &';
sFilter = sFilter | 'Target Product ¦ Total Products &';
sFilter = sFilter | 'Subscription Plan Measure¦ Base &';
sFilter = sFilter | 'Period ¦ All Period';

ExecuteProcess('}bedrock.cube.view.create',
   'pLogOutput', 0,
   'pStrictErrorHandling', 0,
   'pCube', sCubeExport,
   'pView', sViewExport,
   'pFilter', sFilter,
   'pSuppressZero', 1,
   'pSuppressConsol', 0,
   'pSuppressRules', 0,
   'pDimDelim', '&',
   'pEleStartDelim', '¦',
   'pEleDelim', '+',
   'pTemp', 1,
   'pSubN', 0,
   'pSuppressConsolStrings', 0
  );
  
SubsetMDXSet('Target Product', sViewExport, '{Tm1FilterByLevel({Tm1SubsetAll([Target Product])},0)}');
SubsetMDXSet('Target Product', sViewExport, '');

SubsetMDXSet('Period', sViewExport, '{Tm1FilterByLevel({Tm1SubsetAll([Period])},0)}');
SubsetMDXSet('Period', sViewExport, '');

ExecuteProcess('}bedrock.cube.data.clear',
   'pLogOutput', 0,
   'pStrictErrorHandling', 0,
   'pCube', sCubeTarget,
   'pView', '',
   'pFilter', 'Version ¦ '|pVersion|'& Subscription Topdown Measure ¦ Base',
   'pFilterParallel', '',
   'pParallelThreads', 0,
   'pDimDelim', '&',
   'pEleStartDelim', '¦',
   'pEleDelim', '+',
   'pCubeLogging', 0,
   'pTemp', 1,
   'pSandbox', '',
   'pSubN', 0
  );

DataSourceType            = 'VIEW';
DatasourceNameForServer   = sCubeExport;
DatasourceNameForClient   = sCubeExport;
DatasourceCubeView        = sViewExport;
	
	
	

#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
#if(AttrN('Subscription Plan Movement', vSubscriptionPlanMovement, 'DecreaseSideFlag') = 1);
#  nValue = nValue*-1;
#endif;
CellPutN(nValue, sCubeTarget, vVersion, vPeriod, vTargetProduct, vSubscriptionPlanMovement, 'Base');
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
