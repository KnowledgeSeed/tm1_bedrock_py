#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# Modos David 2023 11 13

sCubeName = 'Subscription Plan';
DataSourceType = 'ODBC';

sOpeningMonth = CellGetS('zSYS Maintenance Parameter', 'OpeningMonth', 'S Type');


#pSourceFile = 'Visszakapcsolt.csv';
#sSourceFolder = 'data_source/';
#
#sSourceFile = sSourceFolder | pSourceFile;
#DatasourceNameForServer = sSourceFile;
#DatasourceNameForClient = sSourceFile;
#DatasourceASCIIDelimiter=';';
#DatasourceASCIIDecimalSeparator='.';
#DatasourceASCIIQuoteCharacter='"';
#DataSourceType='CHARACTERDELIMITED';
#DatasourceASCIIHeaderRecords = 1;
#
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

sDimName = 'Period';

If(DimensionElementExists(sDimName, vDate)= 0);
    itemskip;
EndIf;


If(vSalesChannel @= 'CC');
    vSalesChannel = 'Call Center';
EndIf;

If(vSalesChannel @= 'UF');
    vSalesChannel = 'Customer Service';
EndIf;

# convert name inputs to principal name without any special characters
sProductID = DimensionElementPrincipalName('Product', vProduct);
# 2 termék tranzakcióit ki kell venni mert negatívban menne a záróértékek
# VIP PAK/3 ID=736
If( sProductID @= '736' );
  itemskip;
ENDIF;
# 60/12 TESZT ID=27
If( sProductID @= '27' );
  itemskip;
ENDIF;



IF( pAllPeriod = 1);
  
#  sPeriodSubsetName = 'Planning Period';
#  IF ( SubsetElementExists('Period', sPeriodSubsetName, vDate) = 0);  

    IF( stringtonumber(vDate) > stringtonumber(sOpeningMonth));
      nLastValue = CellGetN('Subscription Plan', pVersion, vDate, vLoyalty, vSalesChannel, 'New', sProductID, 'New increase', 'Final Value');
      sCurrentValue = nLastValue + vValue;
      CellPutN( sCurrentValue,'Subscription Plan', pVersion, vDate, vLoyalty, vSalesChannel, 'New', sProductID, 'New increase', 'base input');
      CellPutN( sCurrentValue,'Subscription Plan', pVersion, vDate, vLoyalty, vSalesChannel, sProductID, 'New', 'New decrease', 'base input');
  ENDIF;

ENDIF;


IF( pLastYear = 1);
  sPeriodSubsetName = 'Last_Actual_Year';
  IF ( SubsetElementExists('Period', sPeriodSubsetName, vDate) = 1);


  nLastValue = CellGetN('Subscription Plan', pVersion, vDate, vLoyalty, vSalesChannel, 'New', sProductID, 'New increase', 'Final Value');
  sCurrentValue = nLastValue + vValue;
  CellPutN( sCurrentValue,'Subscription Plan', pVersion, vDate, vLoyalty, vSalesChannel, 'New', sProductID, 'New increase', 'base input');
  CellPutN( sCurrentValue,'Subscription Plan', pVersion, vDate, vLoyalty, vSalesChannel, sProductID, 'New', 'New decrease', 'base input');


  ENDIF;

ENDIF;

#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
