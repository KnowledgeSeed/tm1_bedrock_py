#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# =========================================================
# Original Date Created              2024.03.02
# Originator                         Modos David
# Purpose                            
# Change Date                           
# Change Request Reference    
# Change Made by                     Módos Dávid
# =========================================================

# 1, provider berakása total alá
# 2, channel aktív kitöltése kitöltése

# DATA
# 3, provider channel hozzárendelés kitöltése

pChannelDimensionName = 'Channel';
pCsoportosFlatDimensionName = 'Csoportos Flat';
sElementName_ChanelTotal = 'Channel List Total';
sElementName_CsoportosFlatTotal = 'Csoportos Flat Total';
sPeriodDim = 'Period';
sAllNTimeSubset = 'All N';

# Cube clear
sCube = 'Channel Csoportos Flat Assignment';


#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
## csoportos flat felvétele
IF ( DimensionElementExists(pCsoportosFlatDimensionName , vchannel_price_group_id) = 0);
  
  DimensionElementComponentAddDirect(pCsoportosFlatDimensionName, sElementName_CsoportosFlatTotal , vchannel_price_group_id,  1);
  CellPutS(vagreement_name, '}ElementAttributes_Csoportos Flat', vchannel_price_group_id, 'Long Name');
  CellPutS(vprogram_provider_name, '}ElementAttributes_Csoportos Flat', vchannel_price_group_id, 'Provider');
ENDIF;

sCsFlatID = 'CsFlatID' | vchannel_price_group_id;
IF ( DimensionElementExists(pChannelDimensionName , sCsFlatID) = 0);
  sElementName_TotalCost ='CS.FL List Total';
  DimensionElementComponentAddDirect(pChannelDimensionName, sElementName_TotalCost,sCsFlatID, 1);
  sEgyediCsoportosFlatName = vagreement_name | ' ID: ' | vchannel_price_group_id;
  CellPutS(sEgyediCsoportosFlatName, '}ElementAttributes_Channel', sCsFlatID, 'Caption');
  CellPutS(vprogram_provider_name, '}ElementAttributes_Channel', sCsFlatID, 'Actual Provider');
  CellPutN(1, '}ElementAttributes_Channel', sCsFlatID, 'Real CS.FL');
ENDIF;


#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****
sCsFlatID = 'CsFlatID' | vchannel_price_group_id;

IF( vchannel_price_group_id @= '');
  itemskip;
ENDIF;

IF ( DimensionElementExists(pChannelDimensionName , vchannel_name) = 0);
 itemskip;
ENDIF;

sStartDate = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, 1);
nMaxLong = SubsetGetSize(sPeriodDim, sAllNTimeSubset);
sEndDate = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, nMaxLong);

endDateIndex = SubsetElementGetIndex(sPeriodDim, sAllNTimeSubset, sEndDate);

IF( stringToNumber(pLastYear) = 1);
i = 1;
sPeriodSubsetName = 'Last_Actual_Year';
    While(i <= endDateIndex);
      sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
      IF ( SubsetElementExists('Period', sPeriodSubsetName, sInputPeriod) = 1);
        CellPutN(1, 'Channel Csoportos Flat Assignment', pVersion, sInputPeriod, vchannel_name, vchannel_price_group_id, 'Assignment');
      ENDIF;
      i = i+1;
      
    END;
    
# end last year
ENDIF;


IF( stringToNumber(pAllPeriod) = 1);
i = 1;
    While(i <= endDateIndex);
      sInputPeriod = SubsetGetElementName(sPeriodDim, sAllNTimeSubset, i);
        CellPutN(1, 'Channel Csoportos Flat Assignment', pVersion, sInputPeriod, vchannel_name, vchannel_price_group_id, 'Assignment');
      i = i+1;
    END;
# end last year
ENDIF;

#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

#endregion
