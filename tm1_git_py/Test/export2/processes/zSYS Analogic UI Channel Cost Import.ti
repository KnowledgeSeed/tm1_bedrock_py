#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

#Botond 09.04

sDimensionName_Period = 'Period';
sDimensionName_Version = 'Version';

#sFileName = '2024_09_24_14_04_30_fees_Base_admin_Musordij.csv';
#pFileName = sFileName;
#

sColumnDelimiter = ',';
sDecimalSeparator = '.';
sThousandSeparator = ' ';
sQuoteChar = '"';
sCharacterSet = 'TM1CS_UTF8';

# megadja hol van az első adat
nHeaderRow = 0;
nFirstDataCol= 1;
nLastDataCol= 9;
pVersion = pVersion;
nHeaderRowIndex = 1;
i = 1;

sActualPeriod = CellGetS('zSYS Maintenance Parameter', 'ActualMonth','S Type');

# define and set CSV as data source
pFileLocation = CellGetS('zSYS Maintenance Parameter', 'Import Data Directory Path', 'S Type');
sFile = pFileLocation | pFileName;

DataSourceType = 'CHARACTERDELIMITED';
DataSourceNameForServer = sFile;
DataSourceNameForClient = sFile;
DatasourceASCIIHeaderRecords = nHeaderRow;
DatasourceASCIIQuoteCharacter = sQuoteChar;
DataSourceASCIIDelimiter = sColumnDelimiter;
SetInputCharacterSet ( sCharacterSet );

nSubsetSize = SubsetGetSize('Period', 'Actual Period N level');





#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

IF(i = 1 % i = 2 %  i = 3 % i = 4);
#IF(i < 107);
  i = i + 1;
  itemskip;
ENDIF;

  sCol1  =  Expand('%v'| NumberToString(nFirstDataCol + 0) |'%');
  sCol2  =  Expand('%v'| NumberToString(nFirstDataCol + 1) |'%');
  sCol3  =  Expand('%v'| NumberToString(nFirstDataCol + 2) |'%');
  sCol4  =  Expand('%v'| NumberToString(nFirstDataCol + 3) |'%');
  sCol5  =  Expand('%v'| NumberToString(nFirstDataCol + 4) |'%');
  sCol6  =  Expand('%v'| NumberToString(nFirstDataCol + 5) |'%');
  sCol7  =  Expand('%v'| NumberToString(nFirstDataCol + 6) |'%');
  sCol8  =  Expand('%v'| NumberToString(nFirstDataCol + 7) |'%');
  sCol9  =  Expand('%v'| NumberToString(nFirstDataCol + 7) |'%');

nColIndex = 1;
nPeriodIndex = 13;

WHILE( nColIndex <= nlastdatacol );
  
    IF( nColindex = 1);
      sChannel = Expand('%v'| NumberToString(nColIndex) |'%');
          IF( sChannel @= 'RTL tervezet CLT UFA tervezet ID: 32');
            i= i+1;
            itemskip;
          ENDIF;
    ENDIF;
    
    IF( nColindex = 2);
      sLineItem = Expand('%v'| NumberToString(nColIndex) |'%');
          IF( sLineItem @= 'Díjmentes');
            i= i+1;
            itemskip;
          ENDIF;      
    ENDIF;
    
    IF( nColindex = 3);
      sCurrency = Expand('%v'| NumberToString(nColIndex) |'%');
        IF( sCurrency @= '');
          i= i+1;
          itemskip;
        ENDIF;
    ENDIF;

    IF( sLineitem @= 'EFI Cost');
      sLineitem = 'Efi';
    ENDIF;

    IF( sLineitem @= 'CS.FL' & nColIndex = 4);
      nRealCSFLCheck= CellGetN('}ElementAttributes_Channel', sChannel, 'Real CS.FL');

      IF( nRealCSFLCheck = 0);
          i = i + 1;
          itemskip;
      ENDIF;

      nCsoportosFlatIndex = ELEMENTINDEX('channel','channel', sChannel);
      sChannel = ELEMENTNAME('channel', 'channel', nCsoportosFlatIndex);
      sChannel = DELET(sChannel,1,8);
    ENDIF;
    
    
    IF ( nColindex >= 4);
    sExcelPeriodSubset = 'Actual Period N level';
    sInputPeriod = HierarchySubsetGetElementName('Period', 'Period', sExcelPeriodSubset, nPeriodIndex);
    nInputYear = stringToNumber(DELET(sInputPeriod,5,2));
    sInputYear = numberToString(nInputYear);
    sInputPeriod = sInputYear;
    sCurrentValue = Expand('%v'| NumberToString(nColIndex) |'%');
#    nCurrentValue = StringToNumberEx(sCurrentValue, sDecimalSeparator, sThousandSeparator);
#    nCurrentValue = RoundP(nCurrentValue,0);
#    sCurrentValue = NumberToString(nCurrentValue);
    
    # csak ha benne van az input PEriod-ban
    sPeriodSubsetName = 'Planning Period';
    sPeriodPass = sInputPeriod | '_Planning';
      IF ( SubsetElementExists('Period', sPeriodSubsetName, sPeriodPass) = 1); 
      
        IF ( sLineItem @= 'Efi' % sLineItem @= 'Flat');
        
          ExecuteProcess('zSYS Analogic UI Channel Input',
           'pChannel', sChannel,
           'pPeriodStart', sInputPeriod,
           'pPeriodEnd', sInputPeriod,
           'pNewType', sLineItem,
           'pCurrency', sCurrency,
           'pValue', sCurrentValue,
           'pVersion', pVersion,
           'pUser', pUser
          );
          
        ENDIF;
        
        IF ( sLineItem @= 'CS.FL');
        
          ExecuteProcess('zSYS Analogic UI Csoportos Flat Input',
           'pCsoportosFlat', sChannel,
           'pPeriodStart', sInputPeriod,
           'pPeriodEnd', sInputPeriod,
           'pCurrency', sCurrency,
           'pValue', sCurrentValue,
           'pVersion', pVersion,
           'pUser', pUser
          );
          
        ENDIF;
        
      ENDIF;
    
    nPeriodIndex = nPeriodIndex + 12; 
    
    ENDIF;
    
    nColIndex = nColIndex + 1;
  
# while  
END;

#Ha végigment a process a subset összes elemén akkor allítsa le
IF(nPeriodIndex > nSubsetSize);
  nPeriodIndex = 13;
ENDIF;

i = i+1;
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
sToday = Today(1);
CellPutS(sToday, '}ElementAttributes_Version', pVersion, 'Last Updated');
CellPutS(pUser, '}ElementAttributes_Version', pVersion, 'Last Updated By');
#endregion
